@page "/CreedPage/{CreedFile}"
@using Creeds.Data
@inject IJsonLoader Loader
@inject IDatabase Database

@if (_summary == null)
{
    <h1>Oh no!</h1>
    <p>
        <em>We did not find a creed called '@CreedFile'</em>
    </p>
}
else
{
    <h1>@_summary.Title</h1>

    <p>@_summary.SourceAttribution</p>

    <p>@_summary.Year</p>
    if (_document == null)
    {
        <p>We couldn't load @_summary.Title</p>
    }
    else
    {
        <p style="white-space: pre">@_document.Data.Content</p>
    }
}

@code {
    [Parameter]
    public string CreedFile { get; set; }
    private Summary _summary;
    private Document<Creed> _document;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CreedFile) || !IsValidCreed(CreedFile))
            return;
        _summary = Database.Creeds.First(c => c.FileName == CreedFile);
        _document = await Loader.LoadAsync<Document<Creed>>($"creeds/{_summary.FileName}.json");
    }

    private bool IsValidCreed(string creedFile)
    {
        return Database.Creeds.Any(c => c.FileName == creedFile);
    }
}